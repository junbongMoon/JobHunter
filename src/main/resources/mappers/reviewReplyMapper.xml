<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jobhunter.mapper.reviewreplymapper">

	<!-- 댓글 목록 조회 -->
	<select id="selectRepliesByBoardNo" resultMap="ReplyResultMap"
		parameterType="int">
		SELECT
		rr.replyNo,
		rr.boardNo,
		rr.userId,
		u.userId AS
		writerId,
		rr.content,
		rr.likes,
		rr.postDate,
		rr.updatedAt,
		rr.isDeleted
		FROM reviewReply rr
		JOIN users u ON rr.userId = u.uid
		WHERE rr.boardNo =
		#{boardNo}
		AND rr.isDeleted = 'N'
		ORDER BY rr.postDate DESC
	</select>


	<!-- 댓글 작성 -->
	<insert id="insertReply"
		parameterType="com.jobhunter.model.reviewReply.ReviewReplyDTO"
		useGeneratedKeys="true" keyProperty="replyNo">
		INSERT INTO reviewReply (
		boardNo,
		userId,
		content,
		likes,
		postDate,
		isDeleted
		)
		VALUES (
		#{boardNo},
		#{userId},
		#{content},
		#{likes},
		NOW(),
		'N'
		)
	</insert>


	<update id="updateReplyDate"
		parameterType="com.jobhunter.model.reviewReply.ReviewReplyDTO">
		UPDATE reviewReply
		SET content = #{content}, updatedAt =
		NOW()
		WHERE replyNo = #{replyNo} AND userId = #{userId}
	</update>

	<update id="deleteReplyDate" parameterType="map">
		UPDATE reviewReply
		SET isDeleted = 'Y'
		WHERE replyNo = #{replyNo} AND userId = #{userId}
	</update>
	
	
	<!--  댓글 페이징 조회 -->
  <select id="selectRepliesWithPaging" resultMap="ReplyResultMap">
    SELECT
      rr.replyNo,
      rr.boardNo,
      rr.userId,
      u.userId AS writerId,
      rr.content,
      rr.likes,
      rr.postDate,
      rr.updatedAt,
      rr.isDeleted
    FROM reviewReply rr
    JOIN users u ON rr.userId = u.uid
    WHERE rr.boardNo = #{boardNo}
      AND rr.isDeleted = 'N'
    ORDER BY rr.postDate DESC
    LIMIT #{size} OFFSET #{offset}
  </select>

  <!-- 댓글 총 개수 조회 (페이징용) -->
  <select id="countRepliesByBoardNo" resultType="int">
    SELECT COUNT(*)
    FROM reviewReply
    WHERE boardNo = #{boardNo}
      AND isDeleted = 'N'
  </select>

  <!-- 결과 매핑 -->
  <resultMap id="ReplyResultMap" type="com.jobhunter.model.reviewReply.ReviewReplyDTO">
    <id property="replyNo" column="replyNo"/>
    <result property="boardNo" column="boardNo"/>
    <result property="userId" column="userId"/>
    <result property="writerId" column="writerId"/>
    <result property="content" column="content"/>
    <result property="likes" column="likes"/>
    <result property="postDate" column="postDate"/>
    <result property="updatedAt" column="updatedAt"/>
    <result property="isDeleted" column="isDeleted"/>
  </resultMap>
</mapper>
